from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from config import ADMIN_ID
from database.db import get_cryptos_by_operator, get_operators, create_connection, is_operator



def get_cancel_menu():
    return ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞"))

def get_main_menu(user_id, role="user"):
    print(f"–°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ID={user_id}, —Ä–æ–ª—å={role}, ADMIN_ID={ADMIN_ID}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    is_admin = str(user_id) in ADMIN_ID.split(',')
    print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ID={user_id}, is_admin={is_admin}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º
    operator_status = is_operator(user_id)
    print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞: ID={user_id}, is_operator={operator_status}")

    menu = ReplyKeyboardMarkup(resize_keyboard=True)
    menu.add(
        KeyboardButton("üí≤ –ö—É–ø–∏—Ç—å"),
        KeyboardButton("üí∞ –ü—Ä–æ–¥–∞—Ç—å"),
        KeyboardButton("üë§ –ü—Ä–æ—Ñ–∏–ª—å"),
        KeyboardButton("üìú –ü—Ä–∞–≤–∏–ª–∞")
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if operator_status:  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤
        menu.add(KeyboardButton("–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞"))
    if is_admin:  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        menu.add(KeyboardButton("‚≠ê–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å‚≠ê"))

    return menu

def get_broadcast_menu():
    broadcast_menu = ReplyKeyboardMarkup(resize_keyboard=True)
    broadcast_menu.add(
        KeyboardButton("üë§ –û–¥–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"),
        KeyboardButton("üë• –í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"),
        KeyboardButton("üîô –ù–∞–∑–∞–¥")
    )
    return broadcast_menu

def get_back_menu():
    back_menu = ReplyKeyboardMarkup(resize_keyboard=True)
    back_menu.add(KeyboardButton("–ù–∞–∑–∞–¥"))
    return back_menu

# –ú–µ–Ω—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
def operator_menu():
    menu = ReplyKeyboardMarkup(resize_keyboard=True)
    menu.add(KeyboardButton("–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏"))
    menu.add(KeyboardButton("üì§ –†–∞—Å—Å—ã–ª–∫–∞"))
    menu.add(KeyboardButton("–ù–∞–∑–∞–¥"))
    return menu

def create_order_keyboard(order_id):
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm:{order_id}"))
    keyboard.add(InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject:{order_id}"))
    return keyboard

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏
def operator_management_menu():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("–ü–æ–∫–∞–∑–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤", "–î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞")
    keyboard.add("–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞", "–£–¥–∞–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞")
    keyboard.add("–ù–∞–∑–∞–¥")
    return keyboard

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
def operator_edit_menu():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è")
    keyboard.add("–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–±–æ—á–∏–µ —á–∞—Å—ã", "–ù–∞–∑–∞–¥")
    return keyboard

def status_selection_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞."""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add(
        KeyboardButton("üü¢ Active"),
        KeyboardButton("üî¥ Inactive"),
        KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞")
    )
    return keyboard
# –ú–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è
profile_menu = ReplyKeyboardMarkup(resize_keyboard=True)
profile_menu.add(
    KeyboardButton("–ò—Å—Ç–æ—Ä–∏—è –∑–∞—è–≤–æ–∫"),
    KeyboardButton("–ù–∞–∑–∞–¥")
)

# –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
def admin_panel_menu():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row(
        KeyboardButton("–ö–æ—à–µ–ª—å–∫–∏"),
        KeyboardButton("–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–æ–∫"),
        KeyboardButton("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞–º–∏")
    )
    keyboard.row(
        KeyboardButton("üì§ –†–∞—Å—Å—ã–ª–∫–∞")
    )
    keyboard.add(KeyboardButton("–í—ã–≥—Ä—É–∑–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç"))
    keyboard.add(KeyboardButton("–ù–∞–∑–∞–¥"))
    return keyboard


def get_broadcast_menu():
    broadcast_menu = ReplyKeyboardMarkup(resize_keyboard=True)
    broadcast_menu.add(
        KeyboardButton("üë§ –û–¥–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"),
        KeyboardButton("üë• –í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"),
        KeyboardButton("üîô –ù–∞–∑–∞–¥")
    )
    return broadcast_menu

def get_confirm_menu():
    return ReplyKeyboardMarkup(resize_keyboard=True).add(
        KeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"),
        KeyboardButton("–û—Ç–º–µ–Ω–∞")
    )

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏
def operator_management_menu():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞")
    keyboard.add("–ü–æ–∫–∞–∑–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤", "–î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞")
    keyboard.add("–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞", "–£–¥–∞–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞")
    keyboard.add("–ù–∞–∑–∞–¥")
    return keyboard

# –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º–∏
def get_crypto_menu():
    crypto_menu = ReplyKeyboardMarkup(resize_keyboard=True)
    crypto_menu.add(
        KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É"),
        KeyboardButton("–°–ø–∏—Å–æ–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç"),
        KeyboardButton("–ü—Ä–∏–≤—è–∑–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞"),
        KeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    )
    return crypto_menu

def get_operator_crypto_keyboard():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton("–ü—Ä–∏–≤—è–∑–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É"))
    keyboard.add(KeyboardButton("–û—Ç–≤—è–∑–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É"))
    keyboard.add(KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–≤—è–∑–∫–∏"))
    keyboard.add(KeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    return keyboard


# –ú–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π —Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π
def get_crypto_action_menu():
    action_menu = ReplyKeyboardMarkup(resize_keyboard=True)
    action_menu.add(
        KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è"),
        KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å –ø–æ–∫—É–ø–∫–∏"),
        KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏"),
        KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã"),
        KeyboardButton("–£–¥–∞–ª–∏—Ç—å"),
        KeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    )
    return action_menu


def get_crypto_keyboard():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º–∏ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏."""
    conn = create_connection()
    cursor = conn.cursor()
    cursor.execute("SELECT id, name_screen FROM cryptocurrencies WHERE operator_id IS NULL")  # –¢–æ–ª—å–∫–æ –Ω–µ–ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
    cryptos = cursor.fetchall()
    conn.close()

    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for crypto in cryptos:
        keyboard.add(KeyboardButton(f"{crypto[0]}: {crypto[1]}"))  # –ö–Ω–æ–ø–∫–∞ —Å ID –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ–º
    keyboard.add(KeyboardButton("–û—Ç–º–µ–Ω–∞"))  # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
    return keyboard

# –ú–µ–Ω—é —Å–ø–∏—Å–∫–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
def get_crypto_list_menu(cryptos):
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ–Ω—é —Å –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.
    :param cryptos: –°–ø–∏—Å–æ–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç (id, name_screen).
    :return: ReplyKeyboardMarkup
    """
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    for crypto in cryptos:
        keyboard.add(KeyboardButton(crypto[1]))  # –î–æ–±–∞–≤–ª—è–µ–º name_screen –≤ –∫–Ω–æ–ø–∫–∏
    keyboard.add(KeyboardButton("–ù–∞–∑–∞–¥"))  # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    return keyboard

# –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–æ–º
def get_wallet_menu():
    wallet_menu = ReplyKeyboardMarkup(resize_keyboard=True)
    wallet_menu.add(
        KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –∫–æ—à–µ–ª–µ–∫"),
        KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ—à–µ–ª–µ–∫"),
        KeyboardButton("–£–¥–∞–ª–∏—Ç—å –∫–æ—à–µ–ª–µ–∫"),
        KeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    )
    return wallet_menu

def get_operator_menu(operators):
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤."""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for operator_id, name_screen in operators:
        keyboard.add(KeyboardButton(f"ID: {operator_id} - {name_screen}"))
    keyboard.add(KeyboardButton("–û—Ç–º–µ–Ω–∞"))
    return keyboard

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–æ—à–µ–ª—å–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ø–∏—Å–∫–∞
def get_wallet_selection_menu(wallets):
    wallet_menu = ReplyKeyboardMarkup(resize_keyboard=True)

    if not wallets:
        wallet_menu.add(KeyboardButton("–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç"))
        wallet_menu.add(KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
        return wallet_menu

    for wallet in wallets:
        try:
            clean_details = wallet[1].replace('\n', ' ').strip()[:50]  # –û—á–∏—Å—Ç–∫–∞ –∏ –æ–±—Ä–µ–∑–∫–∞
            wallet_menu.add(KeyboardButton(f"ID: {wallet[0]} - {clean_details}"))
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏: ID={wallet[0]}, Details={wallet[1]}. –û—à–∏–±–∫–∞: {e}")

    wallet_menu.add(KeyboardButton("–ù–∞–∑–∞–¥"))
    return wallet_menu

def add_main_menu_button(keyboard: ReplyKeyboardMarkup) -> ReplyKeyboardMarkup:
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞.
    
    :param keyboard: –ò—Å—Ö–æ–¥–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
    :return: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π.
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–Ω–æ–ø–∫–∞ "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    for row in keyboard.keyboard:
        for button in row:
            if button.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
                return keyboard  # –ö–Ω–æ–ø–∫–∞ —É–∂–µ –µ—Å—Ç—å, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º
    keyboard.add(KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É
    return keyboard

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç—ã
def currency_keyboard(currencies):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    for currency in currencies:
        keyboard.add(KeyboardButton(currency))
    keyboard.add(KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    return keyboard


def get_operator_keyboard():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏."""
    operators = get_operators()
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    
    for operator in operators:
        keyboard.add(KeyboardButton(f"{operator[0]}: {operator[1]}"))  # –§–æ—Ä–º–∞—Ç –∫–Ω–æ–ø–∫–∏: "ID: –ò–º—è"
    keyboard.add(KeyboardButton("–û—Ç–º–µ–Ω–∞"))  # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
    return keyboard

def get_crypto_unassign_keyboard(operator_id):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º–∏ –¥–ª—è –æ—Ç–≤—è–∑–∫–∏."""
    cryptos = get_cryptos_by_operator(operator_id)  # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)

    if not cryptos:
        keyboard.add(KeyboardButton("–ù–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç"))
        keyboard.add(KeyboardButton("–û—Ç–º–µ–Ω–∞"))
        return keyboard

    for crypto in cryptos:
        keyboard.add(KeyboardButton(f"{crypto[0]}: {crypto[1]}"))  # –§–æ—Ä–º–∞—Ç –∫–Ω–æ–ø–∫–∏: "ID: –ù–∞–∑–≤–∞–Ω–∏–µ"
    keyboard.add(KeyboardButton("–û—Ç–º–µ–Ω–∞"))  # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
    return keyboard
