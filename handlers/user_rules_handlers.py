from aiogram import types
from database.db import get_rules
from config import dp

# –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª
def format_rules(rules):
    if not rules:
        return "–ü—Ä–∞–≤–∏–ª–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."
    formatted = "–¢–µ–∫—É—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞:\n\n"
    for rule_id, rule_text in rules:
        formatted += f"{rule_text}\n\n"
    return formatted.strip()

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∞–≤–∏–ª
@dp.message_handler(lambda message: message.text == "üìú –ü—Ä–∞–≤–∏–ª–∞")
async def view_rules_handler(message: types.Message):
    rules = get_rules()
    formatted_rules = format_rules(rules)
    await message.reply(formatted_rules, parse_mode="HTML")
